// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma" // Planetscale doesn't support foreign keys yet, so we need to use this
}

// NC Models
model Protocol {
  id            String      @id @default(cuid())
  hash          String      @unique
  name          String
  schemaVersion Int
  description   String?
  assetPath     String
  importedAt    DateTime    @default(now())
  lastModified  DateTime
  stages        String // This is actually JSON, but prisma doesn't support it with sqlite: https://github.com/prisma/prisma/issues/3786
  interviews    Interview[]
  owner         User        @relation(fields: [ownerId], references: [id])
  ownerId       String

  @@index([ownerId])
}

model Interview {
  id          String    @id @default(cuid()) // Cannot be bigint because we want to obfuscate the id
  startTime   DateTime  @default(now())
  finishTime  DateTime?
  exportTime  DateTime?
  lastUpdated DateTime  @updatedAt
  network     String    @default("")
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  protocol    Protocol  @relation(fields: [protocolId], references: [id])
  protocolId  String
  currentStep Int       @default(0)

  @@index([userId])
  @@index([protocolId])
}

model User {
  id         String      @id @default(cuid())
  name       String?
  email      String?     @unique
  password   String?
  protocols  Protocol[]
  interviews Interview[]
  roles      Role[]
}

model Role {
  name  String @id @unique
  users User[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model SetupMetadata {
  id        Int   @id
  configured Boolean  @default(false)
  initializedAt DateTime @default(now())
  configuredAt DateTime? 
}
